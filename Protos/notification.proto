syntax = "proto3";

option csharp_namespace = "GrpcNotification";

package wslnotifyd;

service Notifier {
    rpc CloseNotification (stream CloseNotificationRequest) returns (stream CloseNotificationReply);
    rpc Notify (stream NotifyRequest) returns (stream NotifyReply);
    rpc NotificationClosed (stream NotificationClosedRequest) returns (NotificationClosedReply);
    rpc ActionInvoked (stream ActionInvokedRequest) returns (ActionInvokedReply);
    rpc NotificationReplied (stream NotificationRepliedRequest) returns (NotificationRepliedReply);
    rpc Shutdown (ShutdownRequest) returns (stream ShutdownReply);
    rpc MessageDurationChanged (MessageDurationRequest) returns (MessageDurationReply);
}

message CloseNotificationRequest {
    uint32 serial_id = 1;
    bool success = 2;
    ClientError error = 3;
}

message CloseNotificationReply {
    uint32 notification_id = 1;
    uint32 serial_id = 2;
}

message NotifyRequest {
    uint32 serial_id = 1;
    bool success = 2;
    ClientError error = 3;
    uint32 notification_id = 4;
}

message NotifyReply {
    string notification_xml = 1;
    uint32 notification_id = 2;
    uint32 serial_id = 3;
    map<string, bytes> notification_data = 4;
}

message NotificationClosedRequest {
    uint32 notification_id = 1;
    uint32 reason = 2;
}

message NotificationClosedReply { 
}

message ActionInvokedRequest {
    uint32 notification_id = 1;
    string action_key = 2;
}

message ActionInvokedReply {
}

message NotificationRepliedRequest {
    uint32 notification_id = 1;
    string text = 2;
}
message NotificationRepliedReply {
}

message ClientError {
    string error_message = 1;
}

message CertificateMessage {
    bytes server_certificate = 1;
    bytes client_certificate = 2;
}

message ShutdownRequest {
}

message ShutdownReply {
}

message MessageDurationRequest {
    uint32 message_duration = 1;
}

message MessageDurationReply {
}
